{"CreationDate":"\/Date(1402956649823)\/","AverageQuestionsPerDay":0,"AverageAnswersPerDay":0,"AveragePostsPerDay":0,"Views":1,"UpVotes":4,"DownVotes":0,"AccountId":124364,"LastAccessDate":"\/Date(1455918565540)\/","Reputation":103,"PostStats":{"PostsMade":0,"TotalViews":0,"Questions":0,"TotalWordsForQuestions":0,"TotalWordsForAnswers":0,"TotalTitleWordCount":0,"HighestScoredQuestion":0,"LowestScoredQuestion":0,"TotalCommentsOnQuestions":0,"Answers":0,"HighestScoredAnswer":0,"LowestScoredAnswer":0,"TotalCommentsOnPosts":0,"TotalCommentsOnAnswers":0,"TotalAcceptedAnswers":0,"AverageWordsPerAnswer":0,"AverageViewsPerPost":0,"AverageAcceptedAnswers":0,"LongestQuestionWordCount":0,"ShortestQuestionWordCount":0,"LongestAnswerWordCount":0,"ShortestAnswerWordCount":0,"LongestQuestionTitleWordCount":0,"AverageQuestionTitleWordCount":0,"AverageWordsPerQuestion":0,"QuestionIds":[],"AnswerIds":[],"Id":null},"BadgeStats":{"TotalBadges":0,"TotalTagBadges":0,"Badges":[],"Id":null,"MostEarnedBadge":null},"CommentStats":{"Comments":0,"LongestCommentWordCount":0,"ShortestCommentWordCount":0,"AverageCommentWordCount":0,"AverageCommentScore":0,"TotalCommentWordCount":0,"HighestScoredComment":0,"LowestScoredComment":0,"CommentScores":[],"Id":null},"Name":"cHao","Id":"academia.stackexchange.com-124364","AboutMe":"<p>\nOK, i have to rant for a second.  Why is it that of the thousands of posts of PHP/MySQL advice on SO, about 99.5% are still using <code>mysql_query</code> -- and about half of those could be the poster child for SQL injection?</p>\n\n<ol>\n<li><a href=\"http://www.php.net/manual/en/mysqlinfo.api.choosing.php\" rel=\"nofollow\">The <code>mysql</code> extension is deprecated</a>, and you are a horrible programmer if you continue to use it.  There have been less creaky alternatives for years.  The <a href=\"http://php.net/manual/en/book.pdo.php\" rel=\"nofollow\"><strong>PDO</strong></a> and <a href=\"http://php.net/manual/en/book.mysqli.php\" rel=\"nofollow\"><strong>mysqli</strong></a> extensions are what decent code uses.</li>\n<li><p>Both new extensions provide a really cool feature: prepared statements.  Used right, they nearly eliminate SQL injection vulnerabilities with very little effort.</p>\n\n<pre class=\"lang-php prettyprint-override\"><code>$db = new PDO(...);\n$stmt = $db-&gt;prepare('\n    SELECT some_stuff\n    FROM some_table\n    WHERE some_field = ?\n');\n\n# note the ', and how i don't have to care.\n# `execute()` will escape it automagically. \n$stmt-&gt;execute(array(\"this won't break\"));\n\nwhile ($row = $stmt-&gt;fetch()) {\n    ...\n}\n</code></pre></li>\n</ol>\n\n<p>I don't want to have to start calling people out on it, but seriously, prepared statements aren't just safer, they're freaking <em>easier</em>.  Learn them or quit calling yourself a PHP programmer.</p>\n","Location":"Richmond, VA"}
