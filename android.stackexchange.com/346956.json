{"CreationDate":"\/Date(1386597781680)\/","AverageQuestionsPerDay":0,"AverageAnswersPerDay":0,"AveragePostsPerDay":0,"Views":1,"UpVotes":1,"DownVotes":0,"AccountId":346956,"LastAccessDate":"\/Date(1419455845647)\/","Reputation":101,"PostStats":{"PostsMade":0,"TotalViews":0,"Questions":0,"TotalWordsForQuestions":0,"TotalWordsForAnswers":0,"TotalTitleWordCount":0,"HighestScoredQuestion":0,"LowestScoredQuestion":0,"TotalCommentsOnQuestions":0,"Answers":0,"HighestScoredAnswer":0,"LowestScoredAnswer":0,"TotalCommentsOnPosts":0,"TotalCommentsOnAnswers":0,"TotalAcceptedAnswers":0,"AverageWordsPerAnswer":0,"AverageViewsPerPost":0,"AverageAcceptedAnswers":0,"LongestQuestionWordCount":0,"ShortestQuestionWordCount":0,"LongestAnswerWordCount":0,"ShortestAnswerWordCount":0,"LongestQuestionTitleWordCount":0,"AverageQuestionTitleWordCount":0,"AverageWordsPerQuestion":0,"QuestionIds":[],"AnswerIds":[],"Id":null},"BadgeStats":{"TotalBadges":0,"TotalTagBadges":0,"Badges":[],"Id":null,"MostEarnedBadge":null},"CommentStats":{"Comments":0,"LongestCommentWordCount":0,"ShortestCommentWordCount":0,"AverageCommentWordCount":0,"AverageCommentScore":0,"TotalCommentWordCount":0,"HighestScoredComment":0,"LowestScoredComment":0,"CommentScores":[],"Id":null},"Name":"OZ_","Id":"android.stackexchange.com-346956","AboutMe":"<p><em>Good code solves only existing issues, without extra universality, doesn't contain anti-patterns and covered by tests to be able to evolve.</em> <a href=\"https://twitter.com/eugeniyoz/status/327671159141326849\" rel=\"nofollow\">(c) me</a></p>\n\n<p>Full-stack programmer.<br>\n<strong>AngularJS</strong> fan and developer since 2011 (from pre-1.0 stage),<br>\n<strong>PHP</strong> backend programmer since 2004.\nLike to write clean OOP code with unit-tests.</p>\n\n<p><strong>Technologies, apps and services I have experience with</strong>: SOA, REST, AngularJS, PHP, Ionic, D3, Jasmine, Protractor, Twitter Bootstrap, Yeoman, Grunt, Restangular (prefer ngResource), UI.Router, AngularStrap, MySQL, PostgreSQL, Redis, Couchbase, MongoDB, GAE, AWS, Cloudflare, Beanstalk, Mandrill, PayPal, Stripe, Nexmo, AWS S3 (and lot of other APIs), Jira, YouTrack, Git, Travis CI, PHPUnit, Agile, TDD...</p>\n\n<p><strong>Things I'd like to get more experience with</strong>: Go, AtScript, Famous, RethinkDB, websockets, Polymer, HTML5 Media (audio, video, canvas).</p>\n\n<p><strong>Things I don't want to work with</strong>: MS SQL, CoffeeScript.</p>\n\n<p>I like MVC and REST paradigms, have experience in writing REST API (also with OPTIONS method support and auto-generated Markdown documentation). Have experience with PayPal API, Amazon S3, Cloudflare, Mandrill, Nexmo and others.</p>\n\n<p>Very passionate to work with AngularJS.</p>\n\n<p>I think unit-tests are essential for code evolution. There is no code without need to evolution. TDD helps to build modular and easy maintainable system. Time, spent to writing tests is much less than time that will be spent to debug.</p>\n\n<p>Have a lot of experience with caching (also with semaphores, preventing dog-pile and race condition effects). I wrote an PHP-wrapper for Redis, published on <a href=\"http://redis.io/clients#PHP\" rel=\"nofollow\">redis.io</a> and successfully working with high load, getting thankful feedback from programmers who use it. \nLike to optimize performance of algorithms and applications.</p>\n\n<p>Time of developer's work costs more than server's resources. Page must be generated fast, should have minimum full page reloads, minimum http-requests - all for user's comfort.</p>\n\n<p>My favorite books are '<a href=\"http://rads.stackoverflow.com/amzn/click/0132350882\" rel=\"nofollow\">Clean code</a>', '<a href=\"http://rads.stackoverflow.com/amzn/click/0321127420\" rel=\"nofollow\">Patterns of Enterprise Application Architecture</a>' and '<a href=\"http://rads.stackoverflow.com/amzn/click/1590599098\" rel=\"nofollow\">PHP Objects, Patterns, and Practice</a>' . Also, I like ideas of <a href=\"http://misko.hevery.com/\" rel=\"nofollow\">Mi≈°ko Hevery</a>.<br>\nI like and respect <a href=\"http://en.wikipedia.org/wiki/SOLID\" rel=\"nofollow\">SOLID</a> principles, <a href=\"http://alistair.cockburn.us/Hexagonal+architecture\" rel=\"nofollow\">hexagonal architecture</a>, MVC pattern, and, especially, <a href=\"http://en.wikipedia.org/wiki/Separation_of_concerns\" rel=\"nofollow\">Separation of concerns</a> (it's not all bookshelf, just most important for me).</p>\n","Location":"St. Petersburg, Russia"}
